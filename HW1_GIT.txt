Для выполнения задания у вас должен быть установлен для Windows - GitBash.

Создан аккаунт в GitHub.



JSON
 
4. Создать внешний репозиторий c названием JSON.
 
В GitHub во вкладке Repositories нажимаем зеленую кнопку New, даем название репозиторию JSON, нажимаем Create repository.  

5. Клонировать репозиторий JSON на локальный компьютер.

Копируем URL созданного репозитория.
git clone https://github.com/svetakudakayeva/JSON.git
 
6. Внутри локального JSON создать файл “new.json”.

cd JSON/ 
touch new.json

7. Добавить файл под гит.

git add new.json
 
8. Закоммитить файл.
 
git commit -m "new"

9. Отправить файл на внешний GitHub репозиторий.
 
git push

10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 
vim new.json
Insert
{
	"full_name": "Кудакаева Светлана Алексеевна",
	"age": 35,
	"pets_number": null,
	"wanted_salary": 2000
}	
Esc, :wq

11. Отправить изменения на внешний репозиторий.
 
git add new.json
git commit -m "info"
git push

12. Создать файл preferences.json

touch preferences.json
 
13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 
cat > preferences.json
{
  "favorite_film": "Титаник",
  "favorite_series": "Секретные материалы",
  "favorite_food": "яичница",
  "favorite_season": "лето",  
  "wanted_country": "США"
} 
CTRL+C

14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON

cat > skills.json 
{
	"skill_1": "Базовая теория тестирования"
	"skill_2": "Клиент-серверная архитектура"
	"skill_3": "Тестирование API"
	"skill_4": "Командная строка Linux"
	"skill_5": "Базы данных"
	"skill_6": "Тестирование DevTools"
	"skill_7": "Мобильное тестирование"
	"skill_8": "Сниффинг траффика"
	"skill_9": "Нагрузочное тестирование"
	"skill_10": "Методология разработки Scrum"
	"skill_11": "Основы Python"
}
CTRL+C

15. Отправить сразу 2 файла на внешний репозиторий.
 
git add .
git commit -m "pref_and_skills"
git push

16. На веб интерфейсе создать файл bug_report.json.

В GitHub в репозитории JSON создаем файл bug_report.json, нажимая для этого Add file/Create new file  
 
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
Нажимаем кнопку Commit changes

18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Заходим в файл 
bug_report.json, нажимаем Edit this file, добавляем
{
  "Bug_report":[
    {
      "ID": 1
      "Severity": "Minor"
      "Enviroment": "Samsung Galaxy A52, Android 13, Chrome 106"
      "Title": "Page "TradingView" is not translated into all languages except DE, ES"
      "Steps": "1.Navigate to capital.com 2.Select any language (except AR, DE) 3.Tap on button  [Burger menu] 4.Expand menu section [Ways to trade] 5.Tap on menu item [TradingView]"
      "Expected_result": "Block "TradingView" is translated into all languages"
      "Actual_result": "Block "TradingView" is not translated into all languages except DE, ES"
    }
   ]
}

19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
Нажимаем кнопку Commit changes

20. Синхронизировать внешний и локальный репозиторий JSON.

 
git pull

XML
 
21. Создать внешний репозиторий c названием XML.

В GitHub во вкладке Repositories нажимаем зеленую кнопку New, даем название репозиторию XML, нажимаем Create repository.
 
22. Клонировать репозиторий XML на локальный компьютер.
Копируем URL созданного репозитория.
 
cd ..
git clone https://github.com/svetakudakayeva/XML.git

23. Внутри локального XML создать файл “new.xml”.
 
touch new.xml

24. Добавить файл под гит.
git add new.xml

 
25. Закоммитить файл.

git commit -m "new.xml"
 
26. Отправить файл на внешний GitHub репозиторий.

git push

27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 
cat > new.xml
<info>
   <full_name>Кудакаева Светлана Алексеевна</full_name>
   <age>35</age>
   <pets_number>null</pets_number>
   <wanted_salary>2000</wanted_salary>
</info>
CTRL+C

28. Отправить изменения на внешний репозиторий.
 
git add new.xml 
git commit -m "add_info"
git push

29. Создать файл preferences.xml
 
touch preferences.xml

30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 
cat > preferences.xml
<preferences>
          <favorite_film>Титаник</favorite_film>
          <favorite_series>Секретные материалы</favorite_series>
          <favorite_food>яичница</favorite_food>
          <favorite_season>лето</favorite_season>  
          <wanted_country>США</wanted_country>
</preferences>	
CTRL+C

31. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML

cat > skills.xml
<skills>
        <skill_1>Базовая теория тестирования</skill_1>
	<skill_2>Клиент-серверная архитектура</skill_2>
	<skill_3>Тестирование API</skill_3>
	<skill_4>Командная строка Linux</skill_4>
	<skill_5>Базы данных</skill_5>
	<skill_6>Тестирование DevTools</skill_6>
	<skill_7>Мобильное тестирование</skill_7>
	<skill_8>Сниффинг траффика</skill_8>
	<skill_9>Нагрузочное тестирование</skill_9>
	<skill_10>Методология разработки Scrum</skill_10>
	<skill_11>Основы Python</skill_11>
</skills>	
CTRL+C

32. Сделать коммит в одну строку.

git add . 
git commit -m "prefandskills"

33. Отправить сразу 2 файла на внешний репозиторий.

git push
 
34. На веб интерфейсе создать файл bug_report.xml.

В GitHub в репозитории XML создаем файл bug_report.xml, нажимая для этого Add file/Create new file
 
35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

Нажимаем кнопку Commit changes
 
36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

Заходим в файл 
bug_report.xml, нажимаем Edit this file, добавляем
<Bug_report>
  <ID>1</ID>
  <Severity>Minor</Severity>
  <Enviroment>Samsung Galaxy A52, Android 13, Chrome 106</Enviroment>
  <Title>Page "TradingView" is not translated into all languages except DE, ES</Title>
  <Steps>1.Navigate to capital.com 2.Select any language (except AR, DE) 3.Tap on button  [Burger menu] 4.Expand menu section [Ways to trade] 5.Tap on menu item [TradingView]"</Steps>
  <Expected_result>Block "TradingView" is translated into all languages</Expected_result>
  <Actual_result>Block "TradingView" is not translated into all languages except DE</Actual_result>
</Bug_report>

37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

Нажимаем кнопку Commit changes
 
38. Синхронизировать внешний и локальный репозиторий XML.


git pull

TXT
 
1. Создать внешний репозиторий c названием TXT.
В GitHub во вкладке Repositories нажимаем зеленую кнопку New, даем название репозиторию TXT, нажимаем Create repository.

 
2. Клонировать репозиторий TXT на локальный компьютер.
 
Копируем URL созданного репозитория.
 
cd ..
git clone https://github.com/svetakudakayeva/TXT.git

3. Внутри локального TXT создать файл “new.txt”.
touch new.txt

4. Добавить файл под гит.
git add new.txt

 
5. Закоммитить файл.

git commit -m "new.txt"
 
6. Отправить файл на внешний GitHub репозиторий.

git push

7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 
cat > new.txt
ФИО: Кудакаева Светлана Алексеевна
Возраст: 35
Количество домашних животных: 0
Будущая желаемая зарплата: 2000
CTRL+C

8. Отправить изменения на внешний репозиторий.

git add new.txt 
git commit -m "info"
git push

9. Создать файл preferences.txt

touch preferences.txt 

10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 
cat > preferences.txt
Любимый фильм: Титаник 
Любимый сериал: Секретные материалы 
Любимая еда: Яичница
Любимое время года: Лето
Страна, которую хотела бы посетить: США
CTRL+C

11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT

cat > skills.txt
Скиллы курса:
1. Базовая теория тестирования
2. Клиент-серверная архитектура
3. Тестирование API
4. Командная строка Linux
5. Базы данных
6. Тестирование DevTools
7. Мобильное тестирование
8. Сниффинг траффика
9. Нагрузочное тестирование
10. Методология разработки Scrum
11. Основы Python
CTRL+C

12. Сделать коммит в одну строку.
 
git add .
git commit -m "prefandskills"

13. Отправить сразу 2 файла на внешний репозиторий.
 
git push

14. На веб интерфейсе создать файл bug_report.txt.
 
В GitHub в репозитории TXT создаем файл bug_report.txt, нажимая для этого Add file/Create new file

15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

Нажимаем кнопку Commit changes

16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 
Заходим в файл 
bug_report.txt, нажимаем Edit this file, добавляем
Bug_report:
ID: 1
Severity: Minor
Enviroment: Samsung Galaxy A52, Android 13, Chrome 106
Title: Page "TradingView" is not translated into all languages except DE, ES
Steps: 1.Navigate to capital.com 2.Select any language (except AR, DE) 3.Tap on button  [Burger menu] 4.Expand menu section [Ways to trade] 5.Tap on menu item [TradingView]
Expected_result: Block "TradingView" is translated into all languages
Actual_result: Block "TradingView" is not translated into all languages except DE, ES.

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
Нажимаем кнопку Commit changes

18. Синхронизировать внешний и локальный репозиторий TXT.

git pull